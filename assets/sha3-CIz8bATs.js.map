{"version":3,"file":"sha3-CIz8bATs.js","sources":["../../node_modules/@noble/hashes/_assert.js","../../node_modules/@noble/hashes/_u64.js","../../node_modules/@noble/hashes/crypto.js","../../node_modules/@noble/hashes/utils.js","../../node_modules/@noble/hashes/sha3.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.anumber = anumber;\nexports.number = anumber;\nexports.abytes = abytes;\nexports.bytes = abytes;\nexports.ahash = ahash;\nexports.aexists = aexists;\nexports.aoutput = aoutput;\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nconst assert = {\n    number: anumber,\n    bytes: abytes,\n    hash: ahash,\n    exists: aexists,\n    output: aoutput,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = void 0;\nexports.fromBig = fromBig;\nexports.split = split;\nexports.add = add;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// BigUint64Array is too slow as per 2024, so we implement it using Uint32Array.\n// TODO: re-check https://issues.chromium.org/issues/42212588\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = exports.nextTick = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\nexports.isBytes = isBytes;\nexports.byteSwap32 = byteSwap32;\nexports.bytesToHex = bytesToHex;\nexports.hexToBytes = hexToBytes;\nexports.asyncLoop = asyncLoop;\nexports.utf8ToBytes = utf8ToBytes;\nexports.toBytes = toBytes;\nexports.concatBytes = concatBytes;\nexports.checkOpts = checkOpts;\nexports.wrapConstructor = wrapConstructor;\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\nexports.randomBytes = randomBytes;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.abytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.abytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.abytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {\n        return crypto_1.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;\nexports.keccakP = keccakP;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.anumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.aexists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.aexists)(this, false);\n        (0, _assert_js_1.abytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.anumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.aoutput)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map"],"names":["_assert","anumber","abytes","ahash","aexists","aoutput","n","isBytes","a","b","lengths","instance","checkFinished","out","min","assert","_u64","fromBig","split","add","U32_MASK64","_32n","le","lst","Ah","Al","i","h","l","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","crypto","exports","byteSwap32","bytesToHex","hexToBytes","asyncLoop","utf8ToBytes","toBytes","concatBytes","checkOpts","wrapConstructor","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","crypto_1","require$$0","_assert_js_1","require$$1","u8","arr","u32","createView","rotr","word","shift","rotl","byteSwap","hexes","_","bytes","hex","asciis","asciiToBase16","ch","hl","al","array","ai","hi","n1","n2","char","nextTick","iters","tick","cb","ts","diff","str","data","arrays","sum","res","pad","Hash","defaults","opts","hashCons","hashC","msg","tmp","bytesLength","sha3","keccakP","_u64_js_1","utils_js_1","require$$2","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","blockLen","suffix","outputLen","enableXOF","state","len","pos","take","bufferOut","to","gen","genShake"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}